name: Infra-check
on:
  pull_request:
    branches:
      - master
    paths:
      - "infra/**"
    types: [opened, synchronize]

env:
  # Secrets for AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1
  # Secrets for cloudflare
  TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  TF_VAR_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

jobs:
  terraform:
    name: "Terraform Infrastructure"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ["infra"]
    defaults:
      run:
        shell: bash
        # We keep Terraform files in the infra directory.
        working-directory: ./infra

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.3

      - name: Terraform init
        id: init
        run: terraform init -upgrade

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true
        # Comment in the PR
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outputs.stdout }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outputs.stdout }}\``;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform checks in directory '${{ matrix.directory }}'\n` + output
            })
  # tfsec scanning
  tfsec:
    needs: terraform
    name: tfsec sarif report
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        # We keep Terraform files in the infra directory.
        working-directory: ./infra
    steps:
      - name: Clone repo
        uses: actions/checkout@master

      - name: tfsec
        uses: tfsec/tfsec-sarif-action@v0.1.4
        with:
          sarif_file: tfsec.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: tfsec.sarif
